generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model checadores {
  id_checador Int       @id @default(autoincrement())
  id_usuario  Int?
  id_parada   Int?
  paradas     paradas?  @relation(fields: [id_parada], references: [id_parada], onDelete: NoAction, onUpdate: NoAction, map: "fk_checador_parada")
  usuarios    usuarios? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_checador_usuario")
}

model duenos {
  id_dueno   Int         @id @default(autoincrement())
  id_usuario Int?
  usuarios   usuarios?   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_dueno_usuario")
  vehiculos  vehiculos[]
}

model paradas {
  id_parada           Int                   @id @default(autoincrement())
  latitud             Decimal?              @db.Decimal
  longitud            Decimal?              @db.Decimal
  activo              Int?                  @db.SmallInt
  nombre              String?               @db.VarChar(255)
  checadores          checadores[]
  rutas_paradas_orden rutas_paradas_orden[]
}

model personas {
  id_persona   Int        @id @default(autoincrement())
  nombre       String?    @db.VarChar(255)
  apellido_pat String?    @db.VarChar(255)
  apellido_mat String?    @db.VarChar(255)
  sexo         Int?       @db.SmallInt
  fecha_nac    DateTime?  @db.Date
  curp         String?    @db.VarChar(255)
  rfc          String?    @db.VarChar(255)
  usuarios     usuarios[]
}

model rutas {
  id_ruta             Int                   @id @default(autoincrement())
  nombre              String?               @db.VarChar(255)
  activo              Int?                  @db.SmallInt
  rutas_paradas_orden rutas_paradas_orden[]
  vehiculos           vehiculos[]
}

model usuarios {
  id_usuario      Int           @id @default(autoincrement())
  id_persona      Int?
  id_tipo_usuario Int?
  usuario         String?       @db.VarChar(255)
  contrasena      String?       @db.VarChar(255)
  correo          String?       @db.VarChar(255)
  activo          Int?          @db.SmallInt
  checadores      checadores[]
  conductor       conductor[]
  duenos          duenos[]
  personas        personas?     @relation(fields: [id_persona], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_persona")
  tipo_usuarios   tipo_usuarios? @relation(fields: [id_tipo_usuario], references: [id_tipo_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_tipo")
}

model vehiculos {
  id_vehiculos Int     @id @default(autoincrement())
  id_dueno     Int?
  id_ruta      Int? 
  numero       String? @db.VarChar(255)
  matricula    String? @db.VarChar(255)
  conductor    conductor[]
  duenos       duenos? @relation(fields: [id_dueno], references: [id_dueno], onDelete: NoAction, onUpdate: NoAction, map: "fk_vehiculos_duenos")
  rutas        rutas? @relation(fields: [id_ruta], references: [id_ruta], onDelete: NoAction, onUpdate: NoAction, map: "fk_vehiculos_rutas") // Nueva relaci√≥n con rutas
}

model conductor {
  id_conductor Int        @id @default(autoincrement())
  id_vehiculos Int?
  id_usuario   Int?
  usuarios     usuarios?  @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_conductor_usuarios")
  vehiculos    vehiculos? @relation(fields: [id_vehiculos], references: [id_vehiculos], onDelete: NoAction, onUpdate: NoAction, map: "fk_conductor_vehiculos")
}
model rutas_paradas_orden {
  id_orden  Int      @id @default(autoincrement())
  id_ruta   Int?
  id_parada Int?
  orden     Int?
  activo    Int?     @db.SmallInt
  paradas   paradas? @relation(fields: [id_parada], references: [id_parada], onDelete: NoAction, onUpdate: NoAction, map: "fk_rutas_paradas_orden_paradas")
  rutas     rutas?   @relation(fields: [id_ruta], references: [id_ruta], onDelete: NoAction, onUpdate: NoAction, map: "fk_rutas_paradas_orden_rutas")
}

model tipo_usuarios {
  id_tipo_usuario Int        @id @default(autoincrement())
  nombre          String?    @db.VarChar(255)
  descripcion     String?    @db.VarChar(255)
  usuarios        usuarios[]
}
